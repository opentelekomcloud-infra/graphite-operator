---
- name: Create Memcached Service
  community.kubernetes.k8s:
    state: "{{ state }}"
    namespace: "{{ graphite_namespace }}"
    name: "{{ graphite_memcached_svc_name }}"
    api_version: "v1"
    kind: "Service"
    definition:
      metadata:
        labels:
          app.kubernetes.io/name: "graphite"
          app.kubernetes.io/instance: "graphite-{{ansible_operator_meta.name }}"
          app.kubernetes.io/version: "{{ graphite_version }}"
          app.kubernetes.io/managed-by: "operator"
      spec:
        clusterIP: None
        ports:
          - name: "memcached"
            port: 11211
            protocol: "TCP"
        selector:
          app.kubernetes.io/name: "graphite"
          app.kubernetes.io/component: "memcached"
          app.kubernetes.io/instance: "graphite-{{ansible_operator_meta.name }}"

- name: Create Memcached StatefulSet
  community.kubernetes.k8s:
    state: "{{ state }}"
    namespace: "{{ graphite_namespace }}"
    name: "{{ graphite_memcached_ss_name }}"
    api_version: "apps/v1"
    kind: "StatefulSet"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/name: "graphite"
          app.kubernetes.io/component: "memcached"
          app.kubernetes.io/instance: "graphite-{{ansible_operator_meta.name }}"
          app.kubernetes.io/version: "{{ graphite_version }}"
          app.kubernetes.io/managed-by: "operator"
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/name: "graphite"
            app.kubernetes.io/component: "memcached"
            app.kubernetes.io/instance: "graphite-{{ansible_operator_meta.name }}"
        serviceName: "{{ graphite_memcached_svc_name }}"
        replicas: "{{ graphite_memcached_count }}"
        template:
          metadata:
            labels:
              app.kubernetes.io/name: "graphite"
              app.kubernetes.io/component: "memcached"
              app.kubernetes.io/instance: "graphite-{{ansible_operator_meta.name }}"
            annotations:
          spec:
            affinity:
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                          - key: "app.kubernetes.io/component"
                            operator: In
                            values:
                              - "memcached"
                          - key: "app.kubernetes.io/name"
                            operator: In
                            values:
                              - "graphite"
                          - key: "app.kubernetes.io/instance"
                            operator: In
                            values:
                              - "graphite-{{ansible_operator_meta.name }}"
                      topologyKey: "kubernetes.io/hostname"
            containers:
              - resources: "{{ graphite_memcached_resources | default(omit) }}"
                readinessProbe:
                  tcpSocket:
                    port: "memcached"
                  initialDelaySeconds: 5
                livenessProbe:
                  tcpSocket:
                    port: "memcached"
                  initialDelaySeconds: 30
                  timeoutSeconds: 5
                name: "memcached"
                command:
                  - memcached
                  - -m 64
                ports:
                  - name: "memcached"
                    containerPort: 11211
                    protocol: "TCP"
                imagePullPolicy: "IfNotPresent"
                image: "{{ graphite_memcached_image }}"
                securityContext:
                  runAsUser: 1001
            serviceAccount: "{{ graphite_service_account | default(omit) }}"
