---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: graphite-carbon-relay
  labels:
    app.kubernetes.io/name: graphite
    app.kubernetes.io/instance: graphite-carbon-relay
spec:
  affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: "app.kubernetes.io/name"
              operator: In
              values:
              - graphite
            - key: "app.kubernetes.io/instance"
              operator: In
              values:
                - graphite-carbon-relay
        topologyKey: "kubernetes.io/hostname"
  selector:
    matchLabels:
      app.kubernetes.io/name: graphite
      app.kubernetes.io/instance: graphite-carbon-relay
  serviceName: "{{ graphite_carbon_relay_svc_name }}"
  replicas: "{{ graphite_relay_count }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: graphite
        app.kubernetes.io/instance: graphite-carbon-relay
      annotations:
        carbon_config_version: "{{ graphite_cm_result['resources'][0]['metadata']['resourceVersion'] }}"
        statsd_config_version: "{{ graphite_statsd_cm_result['resources'][0]['metadata']['resourceVersion'] }}"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - {%+ if graphite_carbon_relay_resources %}resources: {{ graphite_carbon_relay_resources }}{% endif %}
          readinessProbe:
            httpGet:
              path: /
              port: graphite-gui
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: graphite
          livenessProbe:
            httpGet:
              path: /
              port: graphite-gui
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: STATSD_INTERFACE
              value: "{{ graphite_node_port_statsd_proto | lower}}"
            - name: RELAY
              value: "1"
            - name: GRAPHITE_TIME_ZONE
              value: {{ grahpite_timezone }}
            - name: RELAY_METHOD
              value: consistent-hashing
            - name: REDIS_TAGDB
              value: "0"
            - name: GRAPHITE_CLUSTER_SERVERS
              value: "{{ graphite_cluster_hosts | join(',') }}"
          securityContext:
          ports:
            - name: graphite-gui
              containerPort: 8080
              protocol: TCP
            - name: graphite-line
              containerPort: "{{ graphite_node_port_line }}"
              protocol: TCP
            - name: graphite-udp
              containerPort: "{{ graphite_node_port_line }}"
              protocol: UDP
            - name: graphite-pickle
              containerPort: "{{ graphite_node_port_pickle }}"
              protocol: TCP
            - name: aggregate-line
              containerPort: 2023
              protocol: TCP
            - name: aggregate-pickl
              containerPort: 2024
              protocol: TCP
            - name: statsd
              containerPort: "{{ graphite_node_port_statsd }}"
              protocol: UDP
            - name: statsd-admin
              containerPort: "{{ graphite_node_port_statsd_admin }}"
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: graphite-configmap
              mountPath: /opt/graphite/conf/
            - name: graphite-statsd-configmap
              mountPath: /opt/statsd/config/tcp.js
              subPath: config_tcp.js
            - name: graphite-statsd-configmap
              mountPath: /opt/statsd/config/udp.js
              subPath: config_udp.js
                #- name: graphite-configmap
                #  mountPath: /etc/go-carbon/go-carbon.conf
                #  subPath: go-carbon.conf
          terminationMessagePolicy: File
          serviceAccount: deployer
          image: "{{ graphite_carbon_node_image }}"
      volumes:
        - name: graphite-configmap
          configMap:
            name: "{{ graphite_relay_cm_name }}"
            defaultMode: 420
        - name: graphite-statsd-configmap
          configMap:
            name: "{{ graphite_statsd_cm_name }}"
            defaultMode: 420
      dnsPolicy: ClusterFirst
      serviceAccount: "{{ graphite_service_account | default(omit) }}"
